{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":3,"numPassedTests":25,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":25,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749001441106,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Initial Setup Test"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Initial Setup Test should be true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be true"}],"endTime":1749001451684,"message":"","name":"/app/aideator-app/src/index.spec.ts","startTime":1749001442279,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MCPManager","Agent Registration"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Registration should register a new agent successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should register a new agent successfully"},{"ancestorTitles":["MCPManager","Agent Registration"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Registration should return the existing agent if trying to register with the same ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return the existing agent if trying to register with the same ID"},{"ancestorTitles":["MCPManager","Agent Unregistration"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Unregistration should unregister an existing agent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should unregister an existing agent"},{"ancestorTitles":["MCPManager","Agent Unregistration"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Unregistration should return false if trying to unregister a non-existent agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return false if trying to unregister a non-existent agent"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should send a message to a registered agent successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should send a message to a registered agent successfully"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should allow an agent to receive a message sent to it","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should allow an agent to receive a message sent to it"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should return null if an agent tries to receive a message but has none","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null if an agent tries to receive a message but has none"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should queue messages in FIFO order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should queue messages in FIFO order"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should fail to send a message if sender is not registered","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to send a message if sender is not registered"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should fail to send a message if receiver is not registered","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to send a message if receiver is not registered"},{"ancestorTitles":["MCPManager","Message Sending and Receiving"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Message Sending and Receiving should return null when trying to receive messages for an unregistered agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return null when trying to receive messages for an unregistered agent"},{"ancestorTitles":["MCPManager","Agent Status Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Status Management should update the status of a registered agent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update the status of a registered agent"},{"ancestorTitles":["MCPManager","Agent Status Management"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager Agent Status Management should not update status for a non-existent agent and return false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not update status for a non-existent agent and return false"},{"ancestorTitles":["MCPManager","List Registered Agents"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager List Registered Agents should return an empty array if no agents are registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array if no agents are registered"},{"ancestorTitles":["MCPManager","List Registered Agents"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCPManager List Registered Agents should return an array of all registered agents","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return an array of all registered agents"}],"endTime":1749001452620,"message":"","name":"/app/aideator-app/src/mcp/MCPManager.spec.ts","startTime":1749001442399,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SampleAgent"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should create and register itself with MCPManager upon construction","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create and register itself with MCPManager upon construction"},{"ancestorTitles":["SampleAgent"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should throw an error if agent registration fails in constructor","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error if agent registration fails in constructor"},{"ancestorTitles":["SampleAgent"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should send a message via MCPManager","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should send a message via MCPManager"},{"ancestorTitles":["SampleAgent"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should receive and process a message from MCPManager","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should receive and process a message from MCPManager"},{"ancestorTitles":["SampleAgent"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should return null when checking messages and none are available","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null when checking messages and none are available"},{"ancestorTitles":["SampleAgent"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should respond to an echo message","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respond to an echo message"},{"ancestorTitles":["SampleAgent"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent should update its status via MCPManager","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update its status via MCPManager"},{"ancestorTitles":["SampleAgent"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent getProfile should reflect the status from MCPManager","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"getProfile should reflect the status from MCPManager"},{"ancestorTitles":["SampleAgent","work method"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SampleAgent work method should set status to BUSY, check messages after a delay, then set to IDLE","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should set status to BUSY, check messages after a delay, then set to IDLE"}],"endTime":1749001453052,"message":"","name":"/app/aideator-app/src/agents/SampleAgent.spec.ts","startTime":1749001442626,"status":"passed","summary":""}],"wasInterrupted":false}
